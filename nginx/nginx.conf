# Nginx configuration for Dockerized Microservices
# Designed for inclusion in /etc/nginx/conf.d/

# Upstream definitions (internal Docker service names and ports)
upstream frontend_service { server frontend:8080; }
upstream auth_service { server auth_api:5002; }
upstream db_api_service { server db_api:5004; }
upstream event_service_backend { server event-service:5000; }
upstream user_portal_service { server user-portal-service:5001; }
upstream participation_service { server participation-service:5005; }
upstream ers_service { server ers-service:5007; }
upstream admin_portal_service { server admin-portal-service:5006; }

# Redirect HTTP to HTTPS & handle Certbot challenges
server {
    listen 80;
    listen [::]:80;
    # CRITICAL: Replace with your actual domain(s) from your .env file
    server_name ${HOST_IP_OR_DOMAIN}; 

    # === NEW: Location for Certbot's HTTP-01 Challenge ===
    # Certbot will place challenge files here, and Nginx will serve them.
    # This must be accessible on port 80.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot; # This directory needs to be mounted from certbot.
    }

    # === Redirect all other HTTP traffic on port 80 to HTTPS ===
    # This ensures all non-challenge HTTP requests are upgraded to HTTPS.
    return 301 https://$host$request_uri;
}

# Main HTTPS server block
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on; # Enables HTTP/2
    # CRITICAL: Replace with your actual domain(s) from your .env file
    server_name ${HOST_IP_OR_DOMAIN};

    # SSL Certificates (These will be managed and updated by Certbot)
    # The paths below are where Certbot will *write* the certificates.
    # Nginx will *read* them from these paths.
    # IMPORTANT: Ensure Certbot generates certificates for the domain(s) specified in server_name.
    # The certs will be in /etc/letsencrypt/live/YOUR_DOMAIN/
    ssl_certificate /etc/letsencrypt/live/${HOST_IP_OR_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${HOST_IP_OR_DOMAIN}/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5; # Basic secure ciphers

    # Security Headers (essential ones retained)
    add_header X-Frame-Options "DENY";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # Proxy for Frontend Service (Root path)
    location / {
        proxy_pass http://frontend_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for Auth Service
    location /auth/ {
        proxy_pass http://auth_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /auth;
        proxy_redirect http://auth_service/ /auth/;
        proxy_redirect https://auth_service/ /auth/;
    }

    # Proxy for Auth Service Static Files
    location ~ ^/auth/static/(.*)$ {
        proxy_pass http://auth_service/static/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /auth;
        proxy_redirect http://auth_service/static/ /auth/static/;
        proxy_redirect https://auth_service/static/ /auth/static/;
    }

    # Proxy for Event Management Service - Base Path (e.g., /events/)
    location = /events/ {
        proxy_pass http://event_service_backend/events/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /events;
        proxy_redirect http://event_service_backend/ /events/;
        proxy_redirect https://event_service_backend/ /events/;
    }

    # Proxy for Event Management Service APIs (e.g., /events/events, /events/events/123)
    location ~ ^/events/events(?:/([0-9]+))?(/?)$ {
        proxy_pass http://event_service_backend$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /events;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        proxy_redirect http://event_service_backend/events/ /events/events/;
        proxy_redirect https://event_service_backend/events/ /events/events/;
    }

    # Proxy for Event Management Service Static Files (e.g., /events/static/style.css)
    location ~ ^/events/static/(.*)$ {
        proxy_pass http://event_service_backend/events/static/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /events;
        proxy_redirect http://event_service_backend/events/static/ /events/static/;
        proxy_redirect https://event_service_backend/events/static/ /events/static/;
    }

    # Proxy for User Portal Main Page (e.g., /user-portal/portal/123)
    location ~ ^/user-portal/portal/(.*)$ {
        proxy_pass http://user_portal_service/user-portal/portal/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /user-portal;
        proxy_redirect http://user_portal_service/portal/ /user-portal/portal/;
        proxy_redirect https://user_portal_service/portal/ /user-portal/portal/;
    }

    # Proxy for User Portal Logout
    location /user-portal/logout {
        proxy_pass http://user_portal_service/user-portal/logout;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /user-portal;
    }

    # Proxy for User Portal Static Files
    location ~ ^/user-portal/static/(.*)$ {
        proxy_pass http://user_portal_service/user-portal/static/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /user-portal;
        proxy_redirect http://user_portal_service/user-portal/static/ /user-portal/static/;
        proxy_redirect https://user_portal_service/user-portal/static/ /user-portal/static/;
    }

    # Proxy for User Portal API calls (db_api)
    location ~ ^/user-portal/api/users/(.*)$ {
        proxy_pass http://db_api_service/users/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for User Portal API calls (event-service)
    location ~ ^/user-portal/api/events(.*)$ {
        proxy_pass http://event_service_backend/events/events$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for DB API Service (direct access, e.g. from landing page)
    location /api/users/ {
        proxy_pass http://db_api_service/users/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

     # Proxy for Participation Service
    location /participations/ {
        proxy_pass http://participation_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /participations;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_redirect http://participation_service/ /participations/;
        proxy_redirect https://participation_service/ /participations/;
    }

    # Proxy for ERS Service
    location /ers/ {
        proxy_pass http://ers_service/ers/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /ers;
        proxy_redirect http://ers_service/ers/ /ers/;
        proxy_redirect https://ers_service/ers/ /ers/;
    }

    # Proxy for Admin Portal Service
    location /admin-portal/ {
        proxy_pass http://admin_portal_service/admin-portal/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Prefix /admin-portal;
        proxy_redirect http://admin_portal_service/ /admin-portal/;
        proxy_redirect https://admin_portal_service/ /admin-portal/;
    }

    # Proxy for Admin Portal APIs (e.g., /admin-portal/api/events)
    location ~ ^/admin-portal/api/events(.*)$ {
        proxy_pass http://event_service_backend/events/events$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for Admin Portal DB API calls (e.g., /admin-portal/api/users)
    location ~ ^/admin-portal/api/users/(.*)$ {
        proxy_pass http://db_api_service/users/$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for Admin Portal participation service (internal API)
    location ~ ^/admin-portal/api/participations(.*)$ {
        proxy_pass http://participation_service/participations$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Basic error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root /usr/share/nginx/html; internal; }
}